<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>database on Vishnu Prasad</title>
    <link>https://imewish.github.io/tags/database/</link>
    <description>Recent content in database on Vishnu Prasad</description>
    <image>
      <title>Vishnu Prasad</title>
      <url>https://imewish.github.io/papermod-cover.png</url>
      <link>https://imewish.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 12 Aug 2022 18:30:00 +0000</lastBuildDate>
    <atom:link href="https://imewish.github.io/tags/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to set up AWS RDS Proxy with IAM Authentication enabled to Aurora Serverless V2 Cluster</title>
      <link>https://imewish.github.io/posts/how-to-set-up-aws-rds-proxy-with-iam-authentication-enabled-to-aurora-serverless-v2-cluster/</link>
      <pubDate>Fri, 12 Aug 2022 18:30:00 +0000</pubDate>
      <guid>https://imewish.github.io/posts/how-to-set-up-aws-rds-proxy-with-iam-authentication-enabled-to-aurora-serverless-v2-cluster/</guid>
      <description>What is RDS Proxy Many applications, including those built on modern serverless architectures, can have many open connections to the database server and may open and close database connections at a high rate, exhausting database memory and compute resources. Amazon RDS Proxy allows applications to pool and share connections established with the database, improving database efficiency and application scalability. With RDS Proxy, failover times for Aurora and RDS databases are reduced by up to 66%, and database credentials, authentication, and access can be managed through integration with AWS Secrets Manager and AWS Identity and Access Management (IAM).</description>
    </item>
    <item>
      <title>DynamoDB CheatSheet For NodeJS/JavaScript</title>
      <link>https://imewish.github.io/posts/dynamodb-cheatsheet-for-nodejs-javascript/</link>
      <pubDate>Tue, 01 Sep 2020 18:30:00 +0000</pubDate>
      <guid>https://imewish.github.io/posts/dynamodb-cheatsheet-for-nodejs-javascript/</guid>
      <description>Amazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database so that you don&amp;rsquo;t have to worry about hardware provisioning, setup, and configuration, replication, software patching, or cluster scaling. DynamoDB also offers encryption at rest, which eliminates the operational burden and complexity involved in protecting sensitive data.
This cheat sheet will cover the most commonly used scenarios of data operations in DynamoDB with AWS DynamoDB Document client for JavaScript/Nodejs.</description>
    </item>
  </channel>
</rss>
